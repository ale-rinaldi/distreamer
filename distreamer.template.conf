# General DiStreamer settings
[GENERAL]

# Information level to print on the console. Can be 0 (no output except critical errors), 1 (basic information), 2 (non-critical errors), 3 (detailed info) or 4 (debug output). It's set to 2 by default.
OUTPUTLEVEL=2

# Path to a log file (default is empty, so no log)
LOGFILE=distreamer.log

# Information level to write in the log file. Can be 0 (no log), 1 (basic information), 2 (non-critical errors), 3 (detailed info) or 4 (debug output). It's set to 2 by default.
LOGLEVEL=2



# Set the input mode and relative parameters. Just remove #s from the section that suits your needs and set parameters accordingly.
[INPUT]

# # ShoutcastClient: connects to a ShoutCast server and generates fragments from it
# MODE=ShoutcastClient
# # The source stream. For ShoutCast it's advised to put a "/;" or the full path (es. "/stream.mp3") at the end to make sure the server does not return the HTML page.
# STREAMURL=http://www.mybeautifulstreamserver.com:8080/stream.mp3
# # The number of fragments to buffer (default: 5)
# FRAGMENTSNUMBER=5
# # The size in bytes of each fragment (default: 81920, that is 5 seconds on a 128Kbps stream)
# FRAGMENTSIZE=81920
# # Get metadata from server ("yes" or "no", default "yes"). WARNING: if this is set to "yes", all the clients need to support metadata!
# GETMETADATA=yes
# # Timeout for HTTP requests, in seconds (default: 5)
# HTTPTIMEOUT=5

# # ShoutcastSourceServer: emulates a ShoutCast server and generates fragment from the connected source
# MODE=ShoutcastSourceServer
# # Binds the virtual ShoutCast server to this address (default: "0.0.0.0", which makes the server public)
# HOSTNAME=0.0.0.0
# # Binds the virtual ShoutCast server to this port (default: 8080)
# PORT=8080
# # a password that sources will need to connect (default: distreamer)
# PASSWORD=MyBeautifulPassword
# # The number of fragments to buffer (default: 5)
# FRAGMENTSNUMBER=5
# # The size in bytes of each fragment (default: 81920, that is 5 seconds on a 128Kbps stream)
# FRAGMENTSIZE=81920
# # Timeout in seconds waiting the source to send data
# TIMEOUT=5
# # Interval between metadata strings (default: 8192, don't touch if unsure)
# ICYINT=8192

# # DiStreamerClient: gets the fragments from a DiStreamer Server
# MODE=DiStreamerClient
# # The DiStreamer server URL (do NOT put a tailing slash!)
# SERVERURL=http://my.beautifuldistreamerserver.com:7080
# # Timeout for HTTP requests, in seconds (default: 5)
# HTTPTIMEOUT=5
# # Interval between HTTP requests, in seconds (default: 3)
# HTTPINTERVAL=3
# # The password to access the DiStreamer Server, if needed
# PASSWORD=MyPassword

# # DiStreamerPersClient: gets the fragments from a DiStreamer Persistent Server using a persistent connection
# MODE=DiStreamerPersClient
# # The DiStreamer Persistent Server URL (do NOT put a tailing slash!)
# SERVERURL=http://my.beautifuldistreamerpersserver.com:4080
# # Timeout for the HTTP socket, in seconds (default: 5)
# HTTPTIMEOUT=5
# # The password to access the DiStreamer Persistent Server, if needed
# PASSWORD=MyPassword

# # DiStreamerRevServer: receives the fragments from a DiStreamer Reverse Client (DiStreamerRevClient)
# MODE=DiStreamerRevServer
# # Binds the server to this address (default: "0.0.0.0", which makes the server public)
# HOSTNAME=0.0.0.0
# # Binds the server to this port (default: 5080)
# PORT=5080
# # An optional password to avoid unauthorized access to the DiStreamer Reverse Server
# PASSWORD=MyPassword

# # DiStreamerPersRevServer: receives the fragments from a DiStreamer Persistent Reverse Client (DiStreamerPersRevClient)
# MODE=DiStreamerPersRevServer
# # Binds the server to this address (default: "0.0.0.0", which makes the server public)
# HOSTNAME=0.0.0.0
# # Binds the server to this port (default: 3080)
# PORT=3080
# # An optional password to avoid unauthorized access to the DiStreamer Persistent Reverse Server
# PASSWORD=MyPassword
# # Timeout waiting for the client to send data (default: 5)
# TIMEOUT=5



# Set the output mode and relative parameters. Just remove #s from the section that suits your needs and set parameters accordingly.
[OUTPUT]

# # ShoutCastServer: emulates a ShoutCast server to let audio players connect to it
# MODE=ShoutcastServer
# # Binds the virtual ShoutCast server to this address (default: "0.0.0.0", which makes the server public)
# HOSTNAME=0.0.0.0
# # Binds the virtual ShoutCast server to this port (default: 8080)
# PORT=8080
# # Minimum number of fragments the server needs to have in cache to start streaming to clients (default: 5). The server will also stream only the last N fragments to new clients.
# # WARNING: do not set it to a higher value than the maximum number of fragments your source generates, or the server will never stream!
# MINFRAGMENTS=5
# # Timeout in seconds before closing the connection to the client if no data is available, or 0 for no timeout.
# TIMEOUT=30
# # Outputs the audio stream only if the server is called by a specific URL. This is intended as a really basic protection to avoid unauthorized access to service streams. For example, if set to "mybeautiful/stream.mp3" the URL to be called will be "http://1.2.3.4:8080/mybeautiful/stream.mp3". If empty, the server will answer to any URL. (default: empty)
# REQUIREURL=mybeautiful/stream.mp3

# # DiStreamerServer: creates a DiStreamer server to let DiStreamer clients connect to it
# MODE=DiStreamerServer
# # Binds the server to this address (default: "0.0.0.0", which makes the server public)
# HOSTNAME=0.0.0.0
# # Binds the server to this port (default: 7080)
# PORT=7080
# # An optional password to avoid unauthorized access to the DiStreamer Server
# PASSWORD=MyPassword

# # DiStreamerPersServer: creates a DiStreamer Persistent Server to let DiStreamer Persistent clients connect to it
# MODE=DiStreamerPersServer
# # Binds the server to this address (default: "0.0.0.0", which makes the server public)
# HOSTNAME=0.0.0.0
# # Binds the server to this port (default: 4080)
# PORT=4080
# # An optional password to avoid unauthorized access to the DiStreamer Persistent Server
# PASSWORD=MyPassword
# # Interval between sends to socket (default: 1)
# INTERVAL=1

# # DiStreamerRevClient: pushes the fragments to a DiStreamer Reverse Server (DiStreamerRevServer)
# MODE=DiStreamerRevClient
# # The DiStreamer Reverse server URL (do NOT put a tailing slash!)
# SERVERURL=http://my.beautifuldistreamerrevserver.com:5080
# # Timeout for HTTP requests, in seconds (default: 5)
# HTTPTIMEOUT=5
# # Interval between HTTP requests, in seconds (default: 3)
# HTTPINTERVAL=3
# # The password to access the DiStreamer Reverse Server, if needed
# PASSWORD=MyPassword

# # DiStreamerPersRevClient: pushes the fragments to a DiStreamer Persistent Reverse Server (DiStreamerPersRevServer)
# MODE=DiStreamerPersRevClient
# # The DiStreamer Reverse server URL (do NOT put a tailing slash!)
# SERVERURL=http://my.beautifuldistreamerpersrevserver.com:3080
# # Timeout for socket sends, in seconds (default: 5)
# TIMEOUT=5
# # Interval between socket sends, in seconds (default: 1)
# INTERVAL=1
# # The password to access the DiStreamer Persistent Reverse Server, if needed
# PASSWORD=MyPassword
